#!/bin/bash
# A gamepad profiler that integrates with antimicro.
# Requires elevation in order to silence the gamepads to all but root.

exit_usage () { echo "Usage: padfiler start|stop|create|edit profile"; exit 1; }
[[ $# -lt 1 ]] && exit_usage
[[ ! -x $(which sudo) ]] && echo "Can't run without sudo." && exit 1
[[ "$(whoami)" != "root" ]] && exec sudo "$0" "$@";

JOYS=(/dev/input/js*)
[[ -z "${JOYS[*]}" ]] && exit;

if [[ -n "$(which antimicro)" ]]; then
    ANTIMICRO_BIN="$(which antimicro)"
elif [[ -e "/usr/bin/antimicro" ]]; then
    ANTIMICRO_BIN="/usr/bin/antimicro"
elif [[ -e "/usr/games/antimicro" ]]; then
    ANTIMICRO_BIN="/usr/games/antimicro"
else
    echo "Antimicro not found."
    exit 1
fi

TASK="$1"
PADFILE="$2"
PADFILE2="$3"

PADFILE_PATH="/etc/padfiles/$PADFILE.xml"
[[ -n "$PADFILE2" ]] && [[ ${#JOYS[@]} -ge 2 ]] && \
    PADFILE2_PATH="/etc/padfiles/$PADFILE2.xml"

case "$TASK" in
start)
    [[ -z "$PADFILE" ]] && exit_usage
    "$0" lock-all

    echo "--== Starting gamepad profiler: $PADFILE $PADFILE2"
    "$ANTIMICRO_BIN" --hidden --profile "$PADFILE_PATH" &

    # This hack allows assigning different profiles to different controllers.
    if [[ -n "$PADFILE2_PATH" ]]; then
        sleep 1 && pkill -9 -f antimicro
        "$ANTIMICRO_BIN" --hidden --profile "$PADFILE2_PATH" \
         --profile-controller 2 &
    fi

    wait && "$0" unlock
    ;;
stop)
    pkill -f antimicro  # Antimicro doesn't like to be quit nicely.
    ;;
create)
    [[ -z "$PADFILE" ]] && exit_usage
    if [[ -e "/etc/padfile/_temp_.xml" ]]; then
        cp "/etc/padfile/_temp_.xml" "$PADFILE_PATH"
    else
        echo "<?xml version="1.0" encoding="UTF-8"?>
<joystick configversion="4">
    <sets>
    </sets>
</joystick>" > "$PADFILE_PATH"
    fi
    "$ANTIMICRO_BIN" --no-tray --profile "$PADFILE_PATH"
    ;;
edit)
    [[ -z "$PADFILE" ]] && exit_usage
    "$ANTIMICRO_BIN" --no-tray --profile "$PADFILE_PATH"
    ;;
lock-js)
    echo "--== Disabling JS devices"
    for d in /dev/input/js*; do
        echo "-= Locking $d"
        chmod 0600 $d
    done
    ;;
lock-event)
    echo "--== Disabling event joysticks"
    for d in /dev/input/event*; do
        (udevadm info --name $d | grep ID_INPUT_JOYSTICK &> /dev/null) && \
         echo "-= Locking $d" && chmod 0600 $d
    done
    ;;
lock-all)
    "$0" lock-js
    "$0" lock-event
    ;;
unlock)
    echo "--== Re-enabling joystick devices"
    for d in /dev/input/js*; do
        echo "-= Unlocking $d"
        chmod 0644 $d
    done
    for d in /dev/input/event*; do
        (udevadm info --name $d | grep ID_INPUT_JOYSTICK &> /dev/null) && \
         echo "-= Unlocking $d" && chmod 0644 $d
    done
    ;;
esac
