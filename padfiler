#!/bin/bash
# A gamepad profiler that integrates with antimicro.
# Requires elevation in order to silence the gamepads to all but root.

exit_usage () { echo "Usage: padfiler start|stop|create|edit profile"; exit 1; }
[[ $# -lt 1 ]] && exit_usage
[[ ! -x $(which sudo) ]] && echo "Can't run without sudo." && exit 1
[[ "$(whoami)" != "root" ]] && exec sudo "$0" "$@";

joys=(/dev/input/js*)
[[ -z "${joys[*]}" ]] && exit;

if [[ -n "$(which antimicro)" ]]; then
    antimicro_bin="$(which antimicro)"
elif [[ -e "/usr/bin/antimicro" ]]; then
    antimicro_bin="/usr/bin/antimicro"
elif [[ -e "/usr/games/antimicro" ]]; then
    antimicro_bin="/usr/games/antimicro"
else
    echo "Antimicro not found."
    exit 1
fi

task="$1"
padfile="$2"
padfile2="$3"

padfile_path="/etc/padfiles/$padfile.xml"
[[ -n "$padfile2" ]] && [[ ${#joys[@]} -ge 2 ]] && \
    padfile2_path="/etc/padfiles/$padfile2.xml"

case "$task" in
start)
    [[ -z "$padfile" ]] && exit_usage
    "$0" lock-all

    echo "--== Starting gamepad profiler: $padfile $padfile2"
    "$antimicro_bin" --hidden --profile "$padfile_path" &

    # This hack allows assigning different profiles to different controllers.
    if [[ -n "$padfile2_PATH" ]]; then
        sleep 1 && pkill -9 -f antimicro
        "$antimicro_bin" --hidden --profile "$padfile2_path" \
         --profile-controller 2 &
    fi

    wait && "$0" unlock
    ;;
stop)
    pkill -f antimicro  # Antimicro doesn't like to be quit nicely.
    ;;
create)
    [[ -z "$padfile" ]] && exit_usage
    if [[ -e "/etc/padfile/_temp_.xml" ]]; then
        cp "/etc/padfile/_temp_.xml" "$padfile_path"
    else
        echo "<?xml version="1.0" encoding="UTF-8"?>
<joystick configversion="4">
    <sets>
    </sets>
</joystick>" > "$padfile_path"
    fi
    "$antimicro_bin" --no-tray --profile "$padfile_path"
    ;;
edit)
    [[ -z "$padfile" ]] && exit_usage
    "$antimicro_bin" --no-tray --profile "$padfile_path"
    ;;
lock-js)
    echo "--== Disabling JS devices"
    for d in /dev/input/js*; do
        echo "-= Locking $d"
        chmod 0600 $d
    done
    ;;
lock-event)
    echo "--== Disabling event joysticks"
    for d in /dev/input/event*; do
        (udevadm info --name $d | grep ID_INPUT_JOYSTICK &> /dev/null) && \
         echo "-= Locking $d" && chmod 0600 $d
    done
    ;;
lock-all)
    "$0" lock-js
    "$0" lock-event
    ;;
unlock)
    echo "--== Re-enabling joystick devices"
    for d in /dev/input/js*; do
        echo "-= Unlocking $d"
        chmod 0644 $d
    done
    for d in /dev/input/event*; do
        (udevadm info --name $d | grep ID_INPUT_JOYSTICK &> /dev/null) && \
         echo "-= Unlocking $d" && chmod 0644 $d
    done
    ;;
esac
